@page "/Productos/create"
@inject IRepository repository
@inject NavigationManager navigationManager
@inject SweetAlertService sweetAlertService

<h3>Crear Producto</h3>

<ProductForm @ref="productForm" Product="product" OnSubmit="Create" ReturnAction="Return" />

@code {
    private Product product = new();
    private ProductForm productForm;

    private async Task Create()
    {
        var responseHttp = await repository.PostAsync("/api/products", product);
        if (responseHttp.Error)
        {
            var message = await responseHttp.GetErrorMessageAsync();
            await sweetAlertService.FireAsync("Error", message);
            return;
        }
        else
        {
            productForm.FormPostedSuccessfully = true;

            var result = await sweetAlertService.FireAsync(new SweetAlertOptions
                {
                    Title = "Mensaje",
                    Text = "Producto creado exitosamente",
                    Icon = SweetAlertIcon.Success,
                    ShowCancelButton = false
                });
        }

        navigationManager.NavigateTo("/Productos");
    }

    private void Return()
    {
        navigationManager.NavigateTo("/Productos");
    }
}